{
    "openapi": "3.1.0",
    "info": {
        "title": "Veo3 API",
        "description": "kie.ai Veo3 API Documentation",
        "version": "1.0.0",
        "contact": {
            "name": "Technical Support",
            "email": "support@kie.ai"
        }
    },
    "servers": [
        {
            "url": "https://api.kie.ai",
            "description": "API Server"
        }
    ],
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "API Key",
                "description": "All APIs require authentication via Bearer Token.\n\nGet API Key:\n1. Visit [API Key Management Page](https://kie.ai/api-key) to get your API Key\n\nUsage:\nAdd to request header:\nAuthorization: Bearer YOUR_API_KEY\n\nNote:\n- Keep your API Key secure and do not share it with others\n- If you suspect your API Key has been compromised, reset it immediately in the management page"
            }
        },
        "responses": {
            "Error": {
                "description": "Server Error"
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/api/v1/veo/generate": {
            "post": {
                "summary": "Generate Veo3 Video",
                "description": "",
                "operationId": "generate-veo3-video",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "prompt": {
                                        "type": "string",
                                        "description": "Text prompt describing the desired video content. Required for all generation modes.\n\n- Should be detailed and specific in describing video content\n- Can include actions, scenes, style and other information\n- For image-to-video, describe how you want the image to come alive",
                                        "example": "A dog playing in a park"
                                    },
                                    "imageUrls": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Image URL list (used in image-to-video mode, only 2 image are supported for now).\n\n- Must be valid image URLs\n- Images must be accessible to the API server",
                                        "example": [
                                            "http://example.com/image1.jpg"
                                        ]
                                    },
                                    "model": {
                                        "type": "string",
                                        "description": "Select the model type to use.\n\n- veo3: Veo 3 Quality, supports both text-to-video and image-to-video generation\n- veo3_fast: Fast generation model, supports both text-to-video and image-to-video generation",
                                        "enum": [
                                            "veo3",
                                            "veo3_fast"
                                        ],
                                        "default": "veo3",
                                        "example": "veo3"
                                    },
                                    "watermark": {
                                        "type": "string",
                                        "description": "Watermark text.\n\n- Optional parameter\n- If provided, a watermark will be added to the generated video",
                                        "example": "MyBrand"
                                    },
                                    "aspectRatio": {
                                        "type": "string",
                                        "description": "Video aspect ratio. Specifies the dimension ratio of the generated video. Available options:\n\n- 16:9: Landscape video format, supports 1080P HD video generation (**Only 16:9 aspect ratio supports 1080P**)\n- 9:16: Portrait video format, suitable for mobile short videos\n\nDefault value is 16:9.",
                                        "enum": [
                                            "16:9",
                                            "9:16"
                                        ],
                                        "default": "16:9",
                                        "example": "16:9"
                                    },
                                    "seeds": {
                                        "type": "integer",
                                        "description": "(Optional) Random seed parameter to control the randomness of the generated content. Value range: 10000-99999. The same seed will generate similar video content, different seeds will generate different content. If not provided, the system will assign one automatically.",
                                        "minimum": 10000,
                                        "maximum": 99999,
                                        "example": 12345
                                    },
                                    
                                    "callBackUrl": {
                                        "type": "string",
                                        "description": "Completion callback URL.\n\n- Optional but recommended for production use\n- System will POST task completion status to this URL\n- Alternatively, use the Get Video Details endpoint to check status",
                                        "example": "http://your-callback-url.com/complete"
                                    }
                                   
                                },
                                "required": [
                                    "prompt"
                                ],
                                "example": {
                                    "prompt": "A dog playing in a park",
                                    "imageUrls": [
                                        "http://example.com/image1.jpg"
                                    ],
                                    "model": "veo3",
                                    "watermark": "MyBrand",
                                    "callBackUrl": "http://your-callback-url.com/complete",
                                    "aspectRatio": "16:9",
                                    "seeds":12345
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "enum": [
                                                        200,
                                                        400,
                                                        401,
                                                        402,
                                                        404,
                                                        422,
                                                        429,
                                                        455,
                                                        500,
                                                        501,
                                                        505
                                                    ],
                                                    "description": "Response status code\n\n- 200: Success - Request has been processed successfully\n- 400: 1080P is processing. It should be ready in 1-2 minutes. Please check back shortly.\n- 401: Unauthorized - Authentication credentials are missing or invalid\n- 402: Insufficient Credits - Account does not have enough credits to perform the operation\n- 404: Not Found - The requested resource or endpoint does not exist\n- 422: Validation Error - The request parameters failed validation checks\n- 429: Rate Limited - Request limit has been exceeded for this resource\n- 455: Service Unavailable - System is currently undergoing maintenance\n- 500: Server Error - An unexpected error occurred while processing the request\n- 501: Generation Failed - Video generation task failed\n- 505: Feature Disabled - The requested feature is currently disabled"
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "description": "Error message when code != 200",
                                                    "example": "success"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "taskId": {
                                                            "type": "string",
                                                            "description": "Task ID, can be used with Get Video Details endpoint to query task status",
                                                            "example": "veo_task_abcdef123456"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "code": 200,
                                    "msg": "success",
                                    "data": {
                                        "taskId": "veo_task_abcdef123456"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "callbacks": {
                    "onVideoGenerated": {
                        "{$request.body#/callBackUrl}": {
                            "post": {
                                "summary": "Video Generation Callback",
                                "description": "When the video generation task is completed, the system will send the result to your provided callback URL via POST request",
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "enum": [
                                                            200,
                                                            400,
                                                            500,
                                                            501
                                                        ],
                                                        "description": "Status code\n\n- 200: Success - Video generation task successfully\n- 400: Your prompt was flagged by Website as violating content policies / Only English prompts are supported at this time / Failed to fetch the image, please verify access limits / Public error unsafe image upload\n- 500: Internal Error, Please try again later / Internal Error - Timeout\n- 501: Failed - Video generation task failed"
                                                    },
                                                    "msg": {
                                                        "type": "string",
                                                        "description": "Status message",
                                                        "example": "Veo3 video generated successfully."
                                                    },
                                                    "data": {
                                                        "type": "object",
                                                        "properties": {
                                                            "taskId": {
                                                                "type": "string",
                                                                "description": "Task ID",
                                                                "example": "veo_task_abcdef123456"
                                                            },
                                                            "info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "resultUrls": {
                                                                        "type": "string",
                                                                        "description": "Generated video URLs",
                                                                        "example": "[http://example.com/video1.mp4]"
                                                                    },
                                                                    "originUrls": {
                                                                        "type": "string",
                                                                        "description": "Original video URLs. Only has value when aspectRatio is not 16:9",
                                                                        "example": "[http://example.com/original_video1.mp4]"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "Callback received successfully"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/veo/record-info": {
            "get": {
                "summary": "Get Veo3 Video Details",
                "description": "Query the execution status and results of Veo3 video generation tasks.\n\n### Status Descriptions\n- 0: Generating - Task is currently being processed\n- 1: Success - Task completed successfully\n- 2: Failed - Task generation failed\n- 3: Generation Failed - Task created successfully but generation failed\n\n### Important Notes\n- Query task status in real-time using taskId\n- Recommend periodic polling until task completion",
                "operationId": "get-veo3-video-details",
                "parameters": [
                    {
                        "in": "query",
                        "name": "taskId",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "veo_task_abcdef123456"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "enum": [
                                                        200,
                                                        400,
                                                        401,
                                                        404,
                                                        422,
                                                        451,
                                                        455,
                                                        500
                                                    ],
                                                    "description": "Response status code\n\n- 200: Success - Request has been processed successfully\n- 400: Your prompt was flagged by Website as violating content policies / Only English prompts are supported at this time / Failed to fetch the image, please verify access limits / Public error unsafe image upload\n- 401: Unauthorized - Authentication credentials are missing or invalid\n- 404: Not Found - The requested resource or endpoint does not exist\n- 422: Validation Error - Request parameters failed validation checks / Record is null / Temporarily supports records within 14 days / Record result data is blank / Record status is not success / Record result data not exist / Record result data is empty\n- 451: Failed to fetch the image. Kindly verify any access limits set by you or your service provider\n- 455: Service Unavailable - System is currently undergoing maintenance\n- 500: Server Error - An unexpected error occurred while processing the request / Timeout / Internal Error, Please try again later"
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "description": "Error message when code != 200",
                                                    "example": "success"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "taskId": {
                                                            "type": "string",
                                                            "description": "Unique identifier of the video generation task",
                                                            "example": "veo_task_abcdef123456"
                                                        },
                                                        "paramJson": {
                                                            "type": "string",
                                                            "description": "Request parameters in JSON format",
                                                            "example": "{\"prompt\":\"A futuristic city with flying cars at sunset.\",\"waterMark\":\"KieAI\"}"
                                                        },
                                                        "completeTime": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "Task completion time",
                                                            "example": "2024-03-20T10:30:00Z"
                                                        },
                                                        "response": {
                                                            "type": "object",
                                                            "description": "Final result",
                                                            "properties": {
                                                                "taskId": {
                                                                    "type": "string",
                                                                    "description": "Task ID",
                                                                    "example": "veo_task_abcdef123456"
                                                                },
                                                                "resultUrls": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "Generated video URLs",
                                                                    "example": [
                                                                        "http://example.com/video1.mp4"
                                                                    ]
                                                                },
                                                                "originUrls": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "Original video URLs. Only has value when aspectRatio is not 16:9",
                                                                    "example": [
                                                                        "http://example.com/original_video1.mp4"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "successFlag": {
                                                            "type": "integer",
                                                            "enum": [
                                                                0,
                                                                1,
                                                                2
                                                            ],
                                                            "description": "Generation status flag\n\n- 0: Generating\n- 1: Success\n- 2: Failed\n- 3: Generation Failed",
                                                            "example": 1
                                                        },
                                                        "errorCode": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "enum": [
                                                                400,
                                                                500,
                                                                501
                                                            ],
                                                            "description": "Error code when task fails\n\n- 400: Your prompt was flagged by Website as violating content policies / Only English prompts are supported at this time / Failed to fetch the image, please verify access limits / Public error unsafe image upload\n- 500: Internal Error, Please try again later / Internal Error - Timeout\n- 501: Failed - Video generation task failed"
                                                        },
                                                        "errorMessage": {
                                                            "type": "string",
                                                            "description": "Error message when task fails",
                                                            "example": null
                                                        },
                                                        "createTime": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "Task creation time",
                                                            "example": "2024-03-20T10:25:00Z"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "code": 200,
                                    "msg": "success",
                                    "data": {
                                        "taskId": "veo_task_abcdef123456",
                                        "paramJson": "{\"prompt\":\"A futuristic city with flying cars at sunset.\",\"waterMark\":\"KieAI\"}",
                                        "completeTime": "2025-06-06 10:30:00",
                                        "response": {
                                            "taskId": "veo_task_abcdef123456",
                                            "resultUrls": [
                                                "http://example.com/video1.mp4"
                                            ],
                                            "originUrls": [
                                                "http://example.com/original_video1.mp4"
                                            ]
                                        },
                                        "successFlag": 1,
                                        "errorCode": null,
                                        "errorMessage": "",
                                        "createTime": "2025-06-06 10:25:00"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/api/v1/veo/get-1080p-video": {
            "get": {
                "summary": "Get 1080P Video",
                "description": "Get the high-definition 1080P version of a Veo3 video generation task.\n\n### Usage Instructions\n- Only videos with 16:9 aspect ratio support 1080P HD video generation.\n- After a video generation task is successfully completed, the system will automatically start generating the 1080P high-definition version\n- 1080P video generation requires additional processing time, please wait some time after the original video generation is completed before calling this endpoint\n- If the 1080P video is not ready yet, the endpoint may return error information\n\n### Important Notes\n- Only successfully generated video tasks can obtain 1080P versions\n- It is recommended to wait a few minutes after receiving the video generation success callback before calling this endpoint",
                "operationId": "get-veo3-1080p-video",
                "parameters": [
                    {
                        "in": "query",
                        "name": "taskId",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "veo_task_abcdef123456"
                    },
                    {
                        "in": "query",
                        "name": "index",
                        "description": "video index",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "enum": [
                                                        200,
                                                        401,
                                                        404,
                                                        422,
                                                        429,
                                                        451,
                                                        455,
                                                        500
                                                    ],
                                                    "description": "Response status code\n\n- 200: Success - Request has been processed successfully\n- 401: Unauthorized - Authentication credentials are missing or invalid\n- 404: Not Found - The requested resource or endpoint does not exist\n- 422: Validation Error - Request parameters failed validation checks / Record is null / Temporarily supports records within 14 days / Record result data is blank / Record status is not success / Record result data not exist / Record result data is empty\n- 429: Rate Limited - Request limit has been exceeded for this resource\n- 451: Failed to fetch the image. Kindly verify any access limits set by you or your service provider\n- 455: Service Unavailable - System is currently undergoing maintenance\n- 500: Server Error - An unexpected error occurred while processing the request"
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "description": "Error message when code != 200",
                                                    "example": "success"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "resultUrl": {
                                                            "type": "string",
                                                            "description": "1080P high-definition video download URL",
                                                            "example": "https://tempfile.aiquickdraw.com/p/42f4f8facbb040c0ade87c27cb2d5e58_1749711595.mp4"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "code": 200,
                                    "msg": "success",
                                    "data": {
                                        "resultUrl": "https://tempfile.aiquickdraw.com/p/42f4f8facbb040c0ade87c27cb2d5e58_1749711595.mp4"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        }
    }
}
